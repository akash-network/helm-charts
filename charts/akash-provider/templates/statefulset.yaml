apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "provider.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ include "provider.fullname" . }}
    {{- include "provider.labels" . | nindent 4 }}
spec:
  replicas: 1
  #strategy:
  #  type: OnDelete
  serviceName: {{ include "provider.fullname" . }}
  selector:
    matchLabels:
      app: {{ include "provider.fullname" . }}
      {{- include "provider.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/cm-scripts: {{ include (print $.Template.BasePath "/configmap-scripts.yaml") . | sha256sum }}
      labels:
        app: {{ include "provider.fullname" . }}
        {{- include "provider.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "provider.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: init
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          args: ["/bin/bash", "/scripts/init.sh"]
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          envFrom:
            - configMapRef:
                name: {{ include "provider.fullname" . }}-init
          volumeMounts:
            - name: scripts
              mountPath: /scripts
              readOnly: true
            - name: keys
              mountPath: /boot-keys
              readOnly: true
            - name: provider-config-volume
              mountPath: /config
            - name: home
              mountPath: "{{ .Values.home }}"
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          args: ["/bin/bash", "/scripts/run.sh"]
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          envFrom:
            - configMapRef:
                name: {{ include "provider.fullname" . }}-main
            {{- if or .Values.bidpricescript .Values.whitelist_url .Values.debug_bid_script .Values.price_target_cpu .Values.price_target_memory .Values.price_target_hd_ephemeral .Values.price_target_hd_pers_hdd .Values.price_target_hd_pers_ssd .Values.price_target_hd_pers_nvme .Values.price_target_endpoint .Values.price_target_ip .Values.price_target_gpu_mappings }}
            - configMapRef:
                name: {{ include "provider.fullname" . }}-pricing
            {{- end }}

          ports:
            - name: api
              containerPort: 8443
              protocol: TCP
            - name: grpc
              containerPort: 8444
              protocol: TCP

          livenessProbe:
            exec:
              command:
              - sh
              - -c
              - /scripts/liveness_checks.sh
            initialDelaySeconds: 240
            periodSeconds: 30
            failureThreshold: 1
            timeoutSeconds: 30

          volumeMounts:
            - name: scripts
              mountPath: /scripts
              readOnly: true
            - name: keys
              mountPath: /boot-keys
              readOnly: true
            - name: provider-config-volume
              mountPath: /config
            - name: home
              mountPath: "{{ .Values.home }}"
      volumes:
        - name: scripts
          configMap:
            name: {{ include "provider.fullname" . }}-script
            defaultMode: 0744
        - name: keys
          secret:
            secretName: {{ include "provider.fullname" . }}-keys
        - name: provider-config-volume
          hostPath:
            path: /root/.akash/k8s-config
            type: DirectoryOrCreate
        - name: home
          emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
