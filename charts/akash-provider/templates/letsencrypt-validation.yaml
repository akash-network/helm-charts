{{- if .Values.letsEncrypt.enabled }}
{{- $storageClass := include "provider.storageClass" . | trim }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "provider.fullname" . }}-storage-validation
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "provider.labels" . | nindent 4 }}
data:
  validation.sh: |
    #!/bin/bash
    set -e
    
    echo "Validating storage classes are available..."
    
    # Check if any storage classes exist
    if ! kubectl get storageclass --no-headers | wc -l | grep -q -v "^0$"; then
      echo "ERROR: No storage classes found in the cluster!"
      echo ""
      echo "The Let's Encrypt PVC requires a storage class to be available."
      echo "Please install a storage provisioner such as:"
      echo ""
      echo "kubectl apply -f https://raw.githubusercontent.com/rancher/local-path-provisioner/v0.0.32/deploy/local-path-storage.yaml"
      echo ""
      echo "For more information, visit: https://github.com/rancher/local-path-provisioner"
      exit 1
    fi
    
    # Check if the specific storage class exists
    if ! kubectl get storageclass {{ $storageClass }} >/dev/null 2>&1; then
      echo "WARNING: Storage class '{{ $storageClass }}' not found!"
      echo ""
      echo "Available storage classes:"
      kubectl get storageclass
      echo ""
      echo "The Let's Encrypt PVC will use the default storage class."
      echo "If you want to use a specific storage class, you can:"
      echo "1. Specify a different storage class in your provider.yaml:"
      echo "   - key: capabilities/storage/1/class"
      echo "     value: your-storage-class"
      echo "   - key: capabilities/storage/1/persistent"
      echo "     value: true"
      echo ""
      echo "2. Or manually specify in values:"
      echo "   letsEncrypt:"
      echo "     storage:"
      echo "       storageClass: your-storage-class"
    else
      echo "Storage class '{{ $storageClass }}' found. Validation passed."
    fi
{{- end }}
