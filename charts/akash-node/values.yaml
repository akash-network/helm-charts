# Default values for akash-node.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  repository: ghcr.io/akash-network/node
  pullPolicy: IfNotPresent

# Common Values

keyring_backend: "test"
home: "/root/.akash"
debug: "false"

# Set Values to run a single Akash node connected to an existing network
# Defaults to mainnet
akash_node:
  enabled: true
  # snapshot_provider can be : "akash" (3Gi), "polkachu" (1Gi), "c29r3" (2Gi), or "autostake" (3Gi)
  # Nov/02 2023: disabled polkachu since it is now behind Cloudflare's "Verify you are human" CAPTCHA
  # Nov/14 2023: autostake snapshot is unavailable, fixed polkachu and set as default, fix "c29r3" snapshot provider
  # Aprl/14 2024: peers updated and autostake working again

  snapshot_provider: "akash"
  api_enable: false
  moniker: mynode
  chainid: akashnet-2
  # disable PEX when nodes have issues with syncing / catching up / peer dial errors/flood
  pex: true
  minimum_gas_prices: 0.025uakt
  net: https://raw.githubusercontent.com/akash-network/net/main/mainnet
  # Get the peers from https://polkachu.com/live_peers/akash, https://github.com/akash-network/net/blob/main/mainnet/peer-nodes.txt
  peers: b3d4c223f832a6582be431060efb2a73903dc85b@85.237.193.106:26656,c58852a0c6ee1d1a68b76e5a54a9dbce895065d9@162.55.245.149:2140,ebeea522e069f9037876e13f73310a601cfcff8a@95.179.212.224:26656,0d8434034e645d305a0cf294e5670ee59e5e55f0@148.251.53.24:12856,4de4f8839c4afdac12aa3c40b80788e720fcd324@164.152.163.191:26656,9744e833f44218fb6f0646e2c37aae1331ce1efc@37.252.186.117:2000,be0a6315cbac3a368ff394d314514264d8447057@141.94.139.219:26856,7e1ec5bf83a17fc588c04beb807bba0daa4b54e7@207.180.193.18:26656,d1e47b071859497089c944dc082e920403484c1a@65.108.128.201:12856,79685f65de2bfc391ecbb1d16a275f10bad1c038@65.109.37.251:26656,9aa4c9097c818871e45aaca4118a9fe5e86c60e2@135.181.113.227:1506,03493c979e821f9d047715b1aaec0ee969392c76@95.214.53.119:26656,82c0ece4f15b830a1982fef0fa103d31ecd563b9@148.251.176.12:2000,f9215993d48d8e0abc31cea931d573a45d201ac8@65.108.232.104:12856,6adc00bef235246c90757547d5f0703d6a548460@178.128.82.28:26656,2719d5a0f2ea29bc3d5d48f8487ac07ca94749f7@49.13.153.159:26667,bc9c4ccacb089ebbaa3fb91bc9aa6348027a2d12@144.76.115.182:12856,02b5a74f0cc909045efe170da3cc5706de2c0be5@88.208.243.62:26656,86f866a645bcc25d3d26fe8dffbd603ebfc0d6ee@142.132.158.93:12856,c72cbbb38bcd5a195c8164089b2c8cd082a10858@44.200.143.117:30656,3fd64ff84bba39ab6ada83d3a565dbb9ef96256e@65.108.120.108:12856,2c083cdf53b1210707fef99917ca0655ceb02250@8.40.118.107:12456,1503f58206070b27ca3260bdf84437618def5c69@195.154.100.227:36656,2880da494979a2ce52a7387abc5844f2b02a0b69@148.113.214.12:10000,89757803f40da51678451735445ad40d5b15e059@169.155.44.92:26656,fa2b10ec2ed348b6076f1b132e283d07df518ebe@66.206.8.82:26656,e726816f42831689eab9378d5d577f1d06d25716@134.65.194.237:26656,5c4b5070308aea2a15d3721c693d9c495b608ee9@149.50.96.97:16656,7f71e85a843516945206db6274c3a37790f79266@37.252.186.202:26656,1eec92ec974f69937f3b5ef0cf6101b477024929@164.152.160.254:26656,506002b391be8d653b14f0162325b14929cac72e@51.81.49.176:12856,f31426d9fb39c2d97653722a34b4c72db71904c2@57.129.97.95:29656,68193e4043565b8740216fd33107a8b8ace2cd7b@167.235.231.186:12856,106b7a61b2d289ed8f7ff52c77d39a97bc1afee5@5.101.149.75:26656,15c0e2e96a126e6bb7847cfabecdab4c38b489f2@65.21.198.18:12856,cefbfea7efe893b060f6b755bde13072ba8201e6@31.7.196.25:26656,c0e2260705c09a3bcc089bc4b692622d6f5a11a4@217.28.48.238:12856,cc685867bc0854a0cfe9fedb929c5fcf7db169b2@65.21.29.115:12856,e956962a9a6b88e5905af2f1c18692b2370b815c@184.107.110.141:10000,69c3ecd3636c27ba57227715a137513bed0c7bcd@148.251.13.186:12856,37201c92625df2814a55129f73f10ab6aa2edc35@95.214.53.214:26696,902bdfa1bf760f8816a7a8a7df0a80f97f15bee1@54.179.209.23:26656,d3dd4556b46689490d45f3e8dca6037d516f5416@137.220.49.147:26656,863db1158b0a58e00a6435786886bb8108130ff8@18.136.180.58:26656,e1b058e5cfa2b836ddaa496b10911da62dcf182e@169.155.44.150:26656,a988534ab1e4bc42aad26ea7ec7bdc7d5415a14c@38.132.56.27:32662,8cb4f379095f95097c441bd5aef014413b7ceabb@37.59.21.96:12856,cb6ae22e1e89d029c55f2cb400b0caa19cbe5523@172.111.52.52:32662,6f497ca71e019da982ad7a441ddfa7e0f23925b3@8.40.118.101:12456,2a3ba81a7ddb00016af1593f925aed390c4bcca9@64.227.108.195:26656
  pruning: "nothing"
  iavl_disable_fastnode: "true"

# If your node gets connection troubles to Polkachu,
# make sure to get through the trouble-shooting section at
# https://www.polkachu.com/state_sync/akash
state_sync:
  enabled: false
  rpc1: "https://akash-rpc.polkachu.com:443"
  rpc2: "https://akash-rpc.polkachu.com:443"
  # Get Polkachu State-Sync Peer for Akash from https://polkachu.com/live_peers/akash
  node_id: "d1e47b071859497089c944dc082e920403484c1a@65.108.128.201:12856"
  # height_offset should equal the AKASH_STATE_SYNC_SNAPSHOT_INTERVAL on the node which makes the state-sync snapshots
  height_offset: 2000

snapshots:
  enabled: false

# Used for mounting AKASH_HOME on a specific node
local_storage:
  enabled: false
  capacity: 100Gi
  path: /mnt/local-storage
  host: k8s-node-0

# Same as local_storage except that it uses block storage pool
# NOTE: you cannot enable both local_storage and ceph_storage at the same time!
ceph_storage:
  enabled: false
  capacity: 100Gi
  storageclass: akash-nodes

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
