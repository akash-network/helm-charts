---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: operator-inventory-node
  namespace: akash-services
  labels:
    akash.network: "true"
    app.kubernetes.io/name: inventory
    app.kubernetes.io/instance: inventory-node
    app.kubernetes.io/component: operator
    app.kubernetes.io/part-of: provider
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: inventory
      app.kubernetes.io/instance: inventory-node
      app.kubernetes.io/component: operator
      app.kubernetes.io/part-of: provider
  template:
    metadata:
      labels:
        akash.network: "true"
        app.kubernetes.io/name: inventory
        app.kubernetes.io/instance: inventory-node
        app.kubernetes.io/component: operator
        app.kubernetes.io/part-of: provider
    spec:
      serviceAccountName: operator-inventory-node
      containers:
        - name: inventory-node
          image: ghcr.io/akash-network/provider
          args:
            - "provider-services"
            - "operator"
            - "inventory"
            - "node"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8081
              name: grpc
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          env:
            - name: AP_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: AP_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: PCIDB_ENABLE_NETWORK_FETCH
              value: "1"
