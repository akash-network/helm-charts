apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Chart.Name }}-ingress
  namespace: {{ .Release.Namespace }}
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: 100m
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "140"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "140"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "140"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  ingressClassName: nginx
  rules:
    - host: {{ .Values.hostName }}
      http:
        paths:
          - backend:
              service:
                name: {{ .Chart.Name }}-service
                port:
                  name: api-port
            path: /
            pathType: Prefix
    - host: {{ .Values.hostName }}
      http:
        paths:
          - backend:
              service:
                name: console-api-mainnet-service
                port:
                  name: api-port
            path: /api-mainnet(/|$)(.*)
            pathType: ImplementationSpecific
    - host: {{ .Values.hostName }}
      http:
        paths:
          - backend:
              service:
                name: console-api-sandbox-service
                port:
                  name: api-port
            path: /api-sandbox(/|$)(.*)
            pathType: ImplementationSpecific
    - host: {{ .Values.hostName }}
      http:
        paths:
          - backend:
              service:
                name: provider-proxy-service
                port:
                  name: api-port
            path: /provider-proxy(/|$)(.*)
            pathType: ImplementationSpecific
  tls:
    - hosts:
        - {{ .Values.hostName }}
      secretName: {{ .Chart.Name }}-{{ .Release.Namespace }}-akash-network-tls
