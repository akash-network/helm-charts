
{{- $interfaces := list "rest" "chain-events" "alert-events" "notifications-events" }}
{{- range $interface := $interfaces }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $.Chart.Name }}-{{ $interface }}
  namespace: {{ $.Release.Namespace }}
  labels:
    app: {{ $.Chart.Name }}-{{ $interface }}
  annotations:
    secrets.doppler.com/reload: 'true'
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ $.Chart.Name }}-{{ $interface }}
  template:
    metadata:
      labels:
        app: {{ $.Chart.Name }}-{{ $interface }}
    spec:
      containers:
        - name: {{ $.Chart.Name }}
          image: "ghcr.io/akash-network/notifications:{{ $.Values.appVersion }}"
          imagePullPolicy: "Always"
          ports:
            - containerPort: 3000
              name: api-port
              protocol: TCP
          env:
            - name: PORT
              value: "3000"
            - name: INTERFACE
              value: "{{ $interface }}"
          resources:
            limits:
              cpu: "500m"
              ephemeral-storage: "1Gi"
              memory: "512Mi"
            requests:
              cpu: "100m"
              ephemeral-storage: "512Mi"
              memory: "256Mi"
          readinessProbe:
            httpGet:
              path: /healthz/readiness
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /healthz/liveness
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 10
          envFrom:
            - secretRef:
                name: {{ $.Chart.Name }}-secret
{{- end }}